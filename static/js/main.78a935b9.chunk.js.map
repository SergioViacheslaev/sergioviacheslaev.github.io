{"version":3,"sources":["components/nav-item/nav-item.component.jsx","components/social-link/social-link.component.jsx","components/socials/socials.component.jsx","components/header/header.component.jsx","assets/developer_avatar_2.jpg","components/profile-card/profile-card.component.jsx","utils/skillsImgUtils.js","components/IconCard.jsx","components/skills/skills.component.jsx","assets/certifications/OCA.png","assets/certifications/OCP.png","assets/certifications/otus.png","assets/certifications/linkedinLearning.png","components/certifications/certifications.component.jsx","pages/homepage/homepage.component.jsx","assets/projects-images/telegram-bot/telegramBotGithubPic.jpg","assets/projects-images/telegram-bot/telegramBotPreviewPic.jpg","assets/projects-images/files-analyzer/filesAnalyzerPreviewPic.jpg","assets/projects-images/files-analyzer/filesAnalyzerGithubPic.jpg","assets/projects-images/status-monitor/status-monitorGithubPic.jpg","assets/projects-images/status-monitor/status-monitorPreviewPic.jpg","pages/projects/projects.component.jsx","pages/underconstruction/underconstruction.component.jsx","App.js","theme.js","index.js"],"names":["withRouter","itemName","routeUrl","location","to","marginLeft","base","md","variant","pathname","as","href","target","rel","rightIcon","SociaLink","color","socialUrl","svgIcon","w","h","_hover","transform","transition","borderRadius","socialsInfo","name","FaGithubSquare","FaLinkedin","FaYoutubeSquare","FaCameraRetro","Socials","p","maxW","map","socialInfo","navItems","page","Header","useColorMode","colorMode","toggleColorMode","justifyContent","flexWrap","align","navItem","onClick","FaMoon","FaSun","ProfileCard","useState","count","setCount","useEffect","templateColumns","lg","mt","paddingBottom","gridColumnGap","textAlign","alignSelf","src","profilePic","alt","paddingTop","cursor","show","hideWhenDone","onTypingDone","style","fontSize","fontWeight","Backspace","delay","spacing","MdCheckCircle","frontendSkillsList","label","backendSkillsList","devOpsSkillsList","IconCard","className","width","height","Skills","Container","size","paddingLeft","pb","gap","s","Tooltip","title","id","Certifications","certificationsList","ocpImg","link","ocaImg","otusImg","linkedinLearningImg","boxSize","HomePage","ProjectsPage","projectsList","previewImg","statusMonitorPreviewPic","githubIcon","statusMonitorGithubPic","description","env","telegramBotPreviewPic","telegramBotGithubPic","filesAnalyzerPreviewPic","filesAnalyzerGithubPic","columns","py","project","shadow","isTruncated","UnderConstructionPage","App","pt","exact","path","component","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78a935b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button} from '@chakra-ui/button';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {FaExternalLinkAlt} from \"react-icons/all\";\r\n\r\nconst NavItem = ({itemName, routeUrl, location}) => {\r\n    //todo: uncomment after CV is ready\r\n\r\n    return itemName !== 'CV' ? (\r\n        <Link to={routeUrl}>\r\n            <Button\r\n                marginLeft={{base: '6px', md: '12px'}}\r\n                variant={location.pathname === routeUrl ? 'outline' : 'solid'}\r\n            >\r\n                {itemName}\r\n            </Button>\r\n        </Link>\r\n    ) : (\r\n        <Button\r\n            as=\"a\"\r\n            marginLeft={{base: '6px', md: '12px'}}\r\n            href={routeUrl}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            rightIcon={<FaExternalLinkAlt/>}\r\n        >\r\n            {itemName}\r\n        </Button>\r\n    );\r\n /*   return (\r\n        <Link to={routeUrl}>\r\n            <Button\r\n                marginLeft={{base: '6px', md: '12px'}}\r\n                variant={location.pathname === routeUrl ? 'outline' : 'solid'}\r\n            >\r\n                {itemName}\r\n            </Button>\r\n        </Link>\r\n    );*/\r\n};\r\n\r\nexport default withRouter(NavItem);\r\n","import React from 'react';\r\nimport { Icon } from '@chakra-ui/react';\r\n\r\nconst SociaLink = ({ color, socialUrl, svgIcon }) => {\r\n  return (\r\n    <a href={socialUrl} target=\"_blank\" rel=\"noreferrer\">\r\n      <Icon\r\n        as={svgIcon}\r\n        w=\"50px\"\r\n        h=\"50px\"\r\n        _hover={{\r\n          transform: 'translateY(-2px)',\r\n          transition: 'all .2s',\r\n        }}\r\n        borderRadius=\"14px\"\r\n        color={`${color}.500`}\r\n      />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SociaLink;\r\n","import React from 'react';\r\nimport {Box, Flex} from '@chakra-ui/react';\r\n\r\nimport SociaLink from '../social-link/social-link.component';\r\n\r\nimport {FaCameraRetro, FaGithubSquare, FaLinkedin, FaYoutubeSquare,} from 'react-icons/fa';\r\n\r\nconst socialsInfo = [\r\n    {\r\n        name: 'github',\r\n        socialUrl: 'https://github.com/SergioViacheslaev',\r\n        svgIcon: FaGithubSquare,\r\n        color: 'black',\r\n    },\r\n    {\r\n        name: 'linkedin',\r\n        socialUrl: 'https://www.linkedin.com/in/sergei-viacheslaev/',\r\n        svgIcon: FaLinkedin,\r\n        color: 'linkedin',\r\n    },\r\n    {\r\n        name: 'youtube',\r\n        socialUrl: 'https://www.youtube.com/playlist?list=PLHkGizioHWF0eImDkUinfDr4ah-YWYHjk',\r\n        svgIcon: FaYoutubeSquare,\r\n        color: 'red',\r\n    },\r\n    {\r\n        name: 'website',\r\n        socialUrl: 'https://sergeyvyacheslaev.com',\r\n        svgIcon: FaCameraRetro,\r\n        color: 'facebook',\r\n    }\r\n];\r\n\r\nconst Socials = () => {\r\n    return (\r\n        <Box p={2}>\r\n            <Flex maxW=\"240px\">\r\n                {socialsInfo.map((socialInfo) => (\r\n                    <SociaLink\r\n                        key={socialInfo.name}\r\n                        color={socialInfo.color}\r\n                        socialUrl={socialInfo.socialUrl}\r\n                        svgIcon={socialInfo.svgIcon}\r\n                    />\r\n                ))}\r\n            </Flex>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Socials;\r\n","import React from 'react';\r\nimport {Button, Flex, Icon, useColorMode} from '@chakra-ui/react';\r\nimport {FaMoon, FaSun} from 'react-icons/fa';\r\n\r\nimport NavItem from '../nav-item/nav-item.component';\r\nimport Socials from \"../socials/socials.component\";\r\n\r\nconst navItems = [\r\n    {\r\n        page: 'Intro',\r\n        routeUrl: '/'\r\n    },\r\n    // {\r\n    //     page: 'Projects',\r\n    //     routeUrl: '/projects'\r\n    // },\r\n    {\r\n        page: 'CV',\r\n        routeUrl: 'https://drive.google.com/file/d/1N4TGrqrpyjs2iG--qf6OkdTddWDGAixq/view?usp=share_link'\r\n    },\r\n];\r\n\r\nconst Header = () => {\r\n    const {colorMode, toggleColorMode} = useColorMode();\r\n    return (\r\n        <Flex\r\n            justifyContent={{base: 'center', md: 'space-between'}}\r\n            flexWrap=\"wrap\"\r\n        >\r\n            <Flex align=\"center\">\r\n                {navItems.map((navItem) => (\r\n                    <NavItem\r\n                        key={navItem.page}\r\n                        itemName={navItem.page}\r\n                        routeUrl={navItem.routeUrl}\r\n                    ></NavItem>\r\n                ))}\r\n                <Button\r\n                    onClick={toggleColorMode}\r\n                    marginLeft={{base: '6px', md: '12px'}}\r\n                >\r\n                    <Icon as={colorMode === 'light' ? FaMoon : FaSun}/>\r\n                </Button>\r\n                <Flex marginLeft=\"30\">\r\n                    <Socials/>\r\n                </Flex>\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/developer_avatar_2.2383462d.jpg\";","import React, {useEffect, useState} from 'react';\r\nimport Typist from 'react-typist';\r\nimport {Grid, GridItem, Image, List, ListIcon, ListItem} from '@chakra-ui/react';\r\nimport {MdCheckCircle} from \"react-icons/all\";\r\n\r\n// import profilePic from '../../assets/developer_avatar.jpg';\r\nimport profilePic from '../../assets/developer_avatar_2.jpg';\r\n\r\nconst ProfileCard = () => {\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setCount(1);\r\n    }, [count]);\r\n\r\n    return (\r\n        <Grid\r\n            templateColumns={{base: '1fr', md: '2fr 2fr', lg: '1fr 3fr'}}\r\n            mt={10}\r\n            p={4}\r\n            paddingBottom={10}\r\n            gridColumnGap={10}\r\n            textAlign={{base: 'center', md: 'inherit'}}>\r\n            <GridItem alignSelf=\"center\">\r\n                <Image src={profilePic} borderRadius=\"full\" alt=\"Sergei Viacheslaev\"/>\r\n            </GridItem>\r\n            <GridItem paddingTop=\"1px\" alignSelf=\"top\">\r\n                {count ? (<Typist cursor={{show: false, hideWhenDone: true}}\r\n                                  onTypingDone={() => setCount(0)}>\r\n            <span style={{fontSize: '24px', fontWeight: 'bold', color: '#1da1f2'}}>\r\n              Hello and welcome !\r\n              <br/>\r\n              I am {' '}\r\n                <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\r\n                Sergei Viacheslaev\r\n                </span>\r\n                <Typist.Backspace count={18} delay={2500}/>\r\n                   <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\r\n                   Java {''}\r\n                   </span>\r\n                   developer\r\n                <Typist.Backspace count={14} delay={2500}/>\r\n                  <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\r\n                    TypeScript {''}\r\n                  </span>\r\n                    developer\r\n                <Typist.Backspace count={20} delay={2500}/>\r\n                  <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\r\n                    Kotlin {''}\r\n                  </span>\r\n                    developer\r\n                 <Typist.Backspace count={16} delay={2500}/>\r\n                    interested in {''}\r\n                <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\r\n                    Backend {''}\r\n                  </span>\r\n                or {''}\r\n                <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\r\n                    Full-stack {''}\r\n                  </span>\r\n                    development\r\n                 <Typist.Backspace count={36} delay={900000000}/>\r\n            </span>\r\n                </Typist>) : ('')}\r\n                <br/>\r\n                <List spacing={3}>\r\n                    <ListItem>\r\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\r\n                        Oracle Certified Java 11 Professional\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\r\n                        Hands-on experience building enterprise Web applications\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\r\n                        IT background: information security, network engineer, system administration\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\r\n                        Creator of the free online course \"How to write Telegram-bots with Java + Spring\"\r\n                    </ListItem>\r\n                </List>\r\n                <br/>\r\n            </GridItem>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ProfileCard;\r\n","export const frontendSkillsList = [\r\n    {\r\n        label: 'JavaScript',\r\n        src: 'https://img.icons8.com/color/64/000000/javascript.png',\r\n    },\r\n    {\r\n        label: 'React',\r\n        src: 'https://img.icons8.com/color/64/000000/react-native.png',\r\n    },\r\n    {\r\n        label: 'HTML',\r\n        src: 'https://seeklogo.com/images/H/html5-logo-EF92D240D7-seeklogo.com.png'\r\n    },\r\n\r\n]\r\n\r\nexport const backendSkillsList = [\r\n    {\r\n        label: 'Java',\r\n        src: 'https://img.icons8.com/color/48/null/java-coffee-cup-logo--v1.png',\r\n    },\r\n    {\r\n        label: 'Spring Boot,Cloud,Security,Data',\r\n        src: 'https://img.icons8.com/color/48/000000/spring-logo.png',\r\n    },\r\n    {\r\n        label: 'AWS',\r\n        src: 'https://img.icons8.com/color/64/000000/amazon-web-services.png',\r\n    },\r\n    {\r\n        label: 'TypeScript',\r\n        src: 'https://img.icons8.com/color/64/000000/typescript.png',\r\n    },\r\n    {\r\n        label: 'Kotlin',\r\n        src: 'https://img.icons8.com/color/64/000000/kotlin.png',\r\n    },\r\n\r\n]\r\n\r\nexport const devOpsSkillsList = [\r\n    {\r\n        label: 'Linux',\r\n        src: 'https://img.icons8.com/color/48/000000/linux--v1.png',\r\n    },\r\n    {\r\n        label: 'Jenkins',\r\n        src: 'https://img.icons8.com/color/48/000000/jenkins.png',\r\n    },\r\n    {\r\n        label: 'Docker',\r\n        src: 'https://img.icons8.com/color/48/000000/docker.png',\r\n    },\r\n    {\r\n        label: 'GitLab CI',\r\n        src: 'https://img.icons8.com/color/48/000000/gitlab.png',\r\n    },\r\n    {\r\n        label: 'Terraform',\r\n        src: 'https://img.icons8.com/color/64/000000/terraform.png',\r\n    },\r\n    {\r\n        label: 'Bitbucket',\r\n        src: 'https://img.icons8.com/color/48/000000/bitbucket.png',\r\n    },\r\n\r\n]\r\n","import React from 'react';\r\n\r\nconst IconCard = ({src}) => {\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"d-flex justify-content-center align-items-center m-2\"\r\n                style={{width: 48, height: 48}}>\r\n                <img src={src} alt=\"icon\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IconCard;\r\n","import React from 'react';\r\nimport {Container, Tooltip} from 'react-bootstrap';\r\nimport {backendSkillsList, devOpsSkillsList, frontendSkillsList} from '../../utils/skillsImgUtils';\r\nimport {Flex, Heading} from \"@chakra-ui/layout\";\r\nimport IconCard from '../IconCard';\r\nimport {Grid} from \"@chakra-ui/react\";\r\n\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <Container>\r\n            <Heading size=\"lg\" paddingLeft={5} pb={5}>Skills</Heading>\r\n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={5}>\r\n\r\n                <Flex maxW=\"240px\" paddingLeft={10}>\r\n                    <Flex>\r\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#007EFC'}}>\r\n                            BE:\r\n                            </span>\r\n                        {backendSkillsList.map(s => (\r\n                            <Tooltip title={s.label} id={s.label}>\r\n                                <IconCard key={s.label} src={s.src}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </Flex>\r\n                </Flex>\r\n                <Flex maxW=\"240px\" paddingLeft={10} pb={10}>\r\n                    <Flex>\r\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#007EFC'}}>\r\n                            FE:\r\n                            </span>\r\n                        {frontendSkillsList.map(s => (\r\n                            <Tooltip title={s.label} id={s.label}>\r\n                                <IconCard key={s.label} src={s.src}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </Flex>\r\n                </Flex>\r\n                <Flex maxW=\"240px\" paddingLeft={10} pb={5}>\r\n                    <Flex>\r\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#007EFC'}}>\r\n                            DevOps:\r\n                            </span>\r\n                        {devOpsSkillsList.map(s => (\r\n                            <Tooltip title={s.label} id={s.label}>\r\n                                <IconCard key={s.label} src={s.src}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </Flex>\r\n                </Flex>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Skills;\r\n","export default __webpack_public_path__ + \"static/media/OCA.f52dc34e.png\";","export default __webpack_public_path__ + \"static/media/OCP.8d2131a2.png\";","export default __webpack_public_path__ + \"static/media/otus.cc6d0663.png\";","export default __webpack_public_path__ + \"static/media/linkedinLearning.8fa602e8.png\";","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport {Box, Flex, Heading} from \"@chakra-ui/layout\";\r\nimport {Grid} from \"@chakra-ui/react\";\r\n\r\nimport ocaImg from '../../assets/certifications/OCA.png';\r\nimport ocpImg from '../../assets/certifications/OCP.png';\r\nimport otusImg from '../../assets/certifications/otus.png';\r\nimport linkedinLearningImg from '../../assets/certifications/linkedinLearning.png';\r\nimport {ExternalLink} from \"react-external-link\";\r\n\r\n\r\nconst Certifications = () => {\r\n    const certificationsList = [\r\n        {\r\n            label: 'OCP',\r\n            src: ocpImg,\r\n            link: 'https://www.credly.com/badges/9a8840e9-0470-41af-945a-192d0a8f20de',\r\n        },\r\n        {\r\n            label: 'OCA',\r\n            src: ocaImg,\r\n            link: 'https://www.credly.com/badges/e7c15dbb-8ec3-4f40-ac01-495a420c1d7a',\r\n        },\r\n        {\r\n            label: 'OTUS',\r\n            src: otusImg,\r\n            link: 'https://drive.google.com/file/d/1SibUv2rs3sdnlp_cQO-Nb0gUUGVTWCtD/view?usp=share_link',\r\n        },\r\n        {\r\n            label: 'Kotlin',\r\n            src: linkedinLearningImg,\r\n            link: 'https://drive.google.com/file/d/1upHgdsWNnEfSYtyjozSJQ2dj95vIkTvY/view?usp=sharing',\r\n        },\r\n\r\n    ]\r\n\r\n    return (\r\n        <Container>\r\n            <Heading size=\"lg\" paddingLeft={5} pb={5}>Certifications</Heading>\r\n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={5}>\r\n                <Flex paddingLeft={5}>\r\n                    {certificationsList.map(s => (\r\n                        <ExternalLink href={s.link}>\r\n                            <Box boxSize=\"150\" p={1}>\r\n                                <img src={s.src} alt=\"Logo\"/>\r\n                            </Box>\r\n                        </ExternalLink>\r\n                    ))}\r\n                </Flex>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Certifications;\r\n","import React from 'react';\r\nimport {Box} from '@chakra-ui/layout';\r\n\r\nimport ProfileCard from '../../components/profile-card/profile-card.component';\r\nimport Skills from '../../components/skills/skills.component';\r\nimport Certifications from \"../../components/certifications/certifications.component\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Box>\r\n            <ProfileCard/>\r\n            <Skills/>\r\n            <Certifications/>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","export default __webpack_public_path__ + \"static/media/telegramBotGithubPic.f5ed15d0.jpg\";","export default __webpack_public_path__ + \"static/media/telegramBotPreviewPic.8908adb8.jpg\";","export default __webpack_public_path__ + \"static/media/filesAnalyzerPreviewPic.ff8d1080.jpg\";","export default __webpack_public_path__ + \"static/media/filesAnalyzerGithubPic.faff9c8a.jpg\";","export default __webpack_public_path__ + \"static/media/status-monitorGithubPic.9afe2911.jpg\";","export default __webpack_public_path__ + \"static/media/status-monitorPreviewPic.c3a8d57f.jpg\";","import React from 'react';\r\nimport {Image, SimpleGrid, Stack, Text} from \"@chakra-ui/react\";\r\nimport {Heading} from \"@chakra-ui/layout\";\r\nimport {ExternalLink} from 'react-external-link';\r\n\r\nimport telegramBotGithubPic from \"../../assets/projects-images/telegram-bot/telegramBotGithubPic.jpg\"\r\nimport telegramBotPreviewPic from \"../../assets/projects-images/telegram-bot/telegramBotPreviewPic.jpg\"\r\nimport filesAnalyzerPreviewPic from \"../../assets/projects-images/files-analyzer/filesAnalyzerPreviewPic.jpg\"\r\nimport filesAnalyzerGithubPic from \"../../assets/projects-images/files-analyzer/filesAnalyzerGithubPic.jpg\"\r\nimport statusMonitorGithubPic from \"../../assets/projects-images/status-monitor/status-monitorGithubPic.jpg\"\r\nimport statusMonitorPreviewPic from \"../../assets/projects-images/status-monitor/status-monitorPreviewPic.jpg\"\r\n\r\nconst ProjectsPage = () => {\r\n    const projectsList = [\r\n        {\r\n            title: \"Services status Monitor\",\r\n            previewImg: statusMonitorPreviewPic,\r\n            githubIcon: statusMonitorGithubPic,\r\n            description: \"Monitors and shows statuses of the services\",\r\n            env: \"Kotlin, SpringBoot, Spring Security, Spring Data, WebSockets, JS, Jquery, MongoDB, Swagger, JUnit, Mockito, Gradle\",\r\n            link: \"https://github.com/SergioViacheslaev/services-status-monitor\"\r\n        },\r\n        {\r\n            title: \"RZD Tickets Telegram-bot\",\r\n            previewImg: telegramBotPreviewPic,\r\n            githubIcon: telegramBotGithubPic,\r\n            description: \"Finds train tickets and notifies if price changes.\",\r\n            env: \"Java 12, Spring Boot, Spring Data, Mongo Cloud, RZD API, lombok, Gradle\",\r\n            link: \"https://github.com/SergioViacheslaev/RZDTicketsMonitoring-TelegramBot\"\r\n        },\r\n        {\r\n            title: \"Files Analyzer\",\r\n            previewImg: filesAnalyzerPreviewPic,\r\n            githubIcon: filesAnalyzerGithubPic,\r\n            description: \"This application can find and read files with plain text inside (txt, log). Supports reading large files (more than 1 GB) and search by different criterias.\",\r\n            env: \"Java 12, OpenJFX, RichTextFx, lombok, Maven\",\r\n            link: \"https://github.com/SergioViacheslaev/JavaFX-FilesAnalyzer\"\r\n        },\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n        <SimpleGrid columns={[1, null, 2, 3]} spacing={[4, null, 6]} py=\"4\">\r\n            {\r\n                projectsList.map(project => (\r\n                    <Stack key={project.title} spacing={2} _hover={{shadow: 'md'}} p={2}>\r\n                        {/*todo: Подоборать шрифт цвет заголовка проекта*/}\r\n                        <Heading isTruncated>\r\n                            <span style={{fontSize: '22px', color: '#1da1f2'}}>\r\n                            {project.title}\r\n                            </span>\r\n                        </Heading>\r\n                        <Text>\r\n                            {project.description}\r\n                        </Text>\r\n                        <Image src={project.previewImg}/>\r\n                        <Text py={0}>\r\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#1da1f2'}}>\r\n                            Env: {''}\r\n                            </span>\r\n                            <Text as=\"abbr\">\r\n                                {project.env}\r\n                            </Text>\r\n                        </Text>\r\n\r\n                        <ExternalLink href={project.link}>\r\n                            <Image src={project.githubIcon}/>\r\n                        </ExternalLink>\r\n                    </Stack>\r\n                ))\r\n            }\r\n        </SimpleGrid>\r\n    );\r\n};\r\n\r\nexport default ProjectsPage;\r\n","import React from 'react';\r\nimport {Text} from \"@chakra-ui/react\";\r\n\r\nconst UnderConstructionPage = () => {\r\n    return (\r\n        <Text fontSize='32px' color='tomato'>\r\n            CV is under construction...\r\n        </Text>\r\n    );\r\n\r\n};\r\n\r\nexport default UnderConstructionPage;\r\n","import React from 'react';\r\nimport {Container} from '@chakra-ui/react';\r\nimport {Route, Switch} from 'react-router';\r\n\r\nimport './App.css';\r\nimport Header from './components/header/header.component';\r\nimport HomePage from './pages/homepage/homepage.component';\r\nimport ProjectsPage from './pages/projects/projects.component';\r\nimport UnderConstructionPage from \"./pages/underconstruction/underconstruction.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container maxW=\"container.xl\" pt={4}>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/projects\" component={ProjectsPage} />\r\n        <Route path=\"/underconstruction\" component={UnderConstructionPage} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { extendTheme } from '@chakra-ui/react';\r\n\r\n// Add color mode config\r\nconst config = {\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false,\r\n};\r\n\r\n// Extend the theme\r\nconst theme = extendTheme({ config });\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <ChakraProvider>\r\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n      <App />\r\n    </ChakraProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}