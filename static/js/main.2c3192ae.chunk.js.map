{"version":3,"sources":["components/nav-item/nav-item.component.jsx","components/social-link/social-link.component.jsx","components/socials/socials.component.jsx","components/header/header.component.jsx","assets/developer_avatar.jpg","components/profile-card/profile-card.component.jsx","utils/skillsImgUtils.js","components/IconCard.jsx","components/skills/skills.component.jsx","assets/certifications/OCA.png","assets/certifications/OCP.png","assets/certifications/otus.png","assets/certifications/linkedinLearning.png","components/certifications/certifications.component.jsx","pages/homepage/homepage.component.jsx","assets/projects-images/telegram-bot/telegramBotGithubPic.jpg","assets/projects-images/telegram-bot/telegramBotPreviewPic.jpg","assets/projects-images/files-analyzer/filesAnalyzerPreviewPic.jpg","assets/projects-images/files-analyzer/filesAnalyzerGithubPic.jpg","assets/projects-images/status-monitor/status-monitorGithubPic.jpg","assets/projects-images/status-monitor/status-monitorPreviewPic.jpg","pages/projects/projects.component.jsx","pages/underconstruction/underconstruction.component.jsx","App.js","theme.js","index.js"],"names":["withRouter","itemName","routeUrl","location","to","marginLeft","base","md","variant","pathname","as","href","target","rel","rightIcon","SociaLink","color","socialUrl","svgIcon","w","h","_hover","transform","transition","borderRadius","socialsInfo","name","FaGithubSquare","FaLinkedin","FaYoutubeSquare","FaCameraRetro","Socials","p","maxW","map","socialInfo","navItems","page","Header","useColorMode","colorMode","toggleColorMode","justifyContent","flexWrap","align","navItem","onClick","FaMoon","FaSun","ProfileCard","useState","count","setCount","useEffect","templateColumns","lg","mt","paddingBottom","gridColumnGap","textAlign","alignSelf","src","profilePic","alt","paddingTop","cursor","show","hideWhenDone","onTypingDone","style","fontSize","fontWeight","Backspace","delay","spacing","MdCheckCircle","frontendSkillsList","label","backendSkillsList","devOpsSkillsList","IconCard","className","width","height","Skills","Container","size","paddingLeft","pb","gap","s","Tooltip","title","id","Certifications","certificationsList","ocpImg","link","ocaImg","otusImg","linkedinLearningImg","boxSize","HomePage","ProjectsPage","projectsList","previewImg","statusMonitorPreviewPic","githubIcon","statusMonitorGithubPic","description","env","telegramBotPreviewPic","telegramBotGithubPic","filesAnalyzerPreviewPic","filesAnalyzerGithubPic","columns","py","project","shadow","isTruncated","UnderConstructionPage","App","pt","exact","path","component","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c3192ae.chunk.js","sourcesContent":["import React from 'react';\nimport {Button} from '@chakra-ui/button';\nimport {Link, withRouter} from 'react-router-dom';\nimport {FaExternalLinkAlt} from \"react-icons/all\";\n\nconst NavItem = ({itemName, routeUrl, location}) => {\n    //todo: uncomment after CV is ready\n\n    return itemName !== 'CV' ? (\n        <Link to={routeUrl}>\n            <Button\n                marginLeft={{base: '6px', md: '12px'}}\n                variant={location.pathname === routeUrl ? 'outline' : 'solid'}\n            >\n                {itemName}\n            </Button>\n        </Link>\n    ) : (\n        <Button\n            as=\"a\"\n            marginLeft={{base: '6px', md: '12px'}}\n            href={routeUrl}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            rightIcon={<FaExternalLinkAlt/>}\n        >\n            {itemName}\n        </Button>\n    );\n /*   return (\n        <Link to={routeUrl}>\n            <Button\n                marginLeft={{base: '6px', md: '12px'}}\n                variant={location.pathname === routeUrl ? 'outline' : 'solid'}\n            >\n                {itemName}\n            </Button>\n        </Link>\n    );*/\n};\n\nexport default withRouter(NavItem);\n","import React from 'react';\nimport { Icon } from '@chakra-ui/react';\n\nconst SociaLink = ({ color, socialUrl, svgIcon }) => {\n  return (\n    <a href={socialUrl} target=\"_blank\" rel=\"noreferrer\">\n      <Icon\n        as={svgIcon}\n        w=\"50px\"\n        h=\"50px\"\n        _hover={{\n          transform: 'translateY(-2px)',\n          transition: 'all .2s',\n        }}\n        borderRadius=\"14px\"\n        color={`${color}.500`}\n      />\n    </a>\n  );\n};\n\nexport default SociaLink;\n","import React from 'react';\nimport {Box, Flex} from '@chakra-ui/react';\n\nimport SociaLink from '../social-link/social-link.component';\n\nimport {FaCameraRetro, FaGithubSquare, FaLinkedin, FaYoutubeSquare,} from 'react-icons/fa';\n\nconst socialsInfo = [\n    {\n        name: 'github',\n        socialUrl: 'https://github.com/SergioViacheslaev',\n        svgIcon: FaGithubSquare,\n        color: 'black',\n    },\n    {\n        name: 'linkedin',\n        socialUrl: 'https://www.linkedin.com/in/sergei-viacheslaev/',\n        svgIcon: FaLinkedin,\n        color: 'linkedin',\n    },\n    {\n        name: 'youtube',\n        socialUrl: 'https://www.youtube.com/playlist?list=PLHkGizioHWF0eImDkUinfDr4ah-YWYHjk',\n        svgIcon: FaYoutubeSquare,\n        color: 'red',\n    },\n    {\n        name: 'website',\n        socialUrl: 'https://sergeyvyacheslaev.com',\n        svgIcon: FaCameraRetro,\n        color: 'facebook',\n    }\n];\n\nconst Socials = () => {\n    return (\n        <Box p={2}>\n            <Flex maxW=\"240px\">\n                {socialsInfo.map((socialInfo) => (\n                    <SociaLink\n                        key={socialInfo.name}\n                        color={socialInfo.color}\n                        socialUrl={socialInfo.socialUrl}\n                        svgIcon={socialInfo.svgIcon}\n                    />\n                ))}\n            </Flex>\n        </Box>\n    );\n};\n\nexport default Socials;\n","import React from 'react';\nimport {Button, Flex, Icon, useColorMode} from '@chakra-ui/react';\nimport {FaMoon, FaSun} from 'react-icons/fa';\n\nimport NavItem from '../nav-item/nav-item.component';\nimport Socials from \"../socials/socials.component\";\n\nconst navItems = [\n    {\n        page: 'Intro',\n        routeUrl: '/'\n    },\n    {\n        page: 'Projects',\n        routeUrl: '/projects'\n    },\n    {\n        page: 'CV',\n        routeUrl: 'https://drive.google.com/file/d/1c6aKOpDoxqs01PWwnewp-358cldTv1Sj/view?usp=sharing'\n    },\n];\n\nconst Header = () => {\n    const {colorMode, toggleColorMode} = useColorMode();\n    return (\n        <Flex\n            justifyContent={{base: 'center', md: 'space-between'}}\n            flexWrap=\"wrap\"\n        >\n            <Flex align=\"center\">\n                {navItems.map((navItem) => (\n                    <NavItem\n                        key={navItem.page}\n                        itemName={navItem.page}\n                        routeUrl={navItem.routeUrl}\n                    ></NavItem>\n                ))}\n                <Button\n                    onClick={toggleColorMode}\n                    marginLeft={{base: '6px', md: '12px'}}\n                >\n                    <Icon as={colorMode === 'light' ? FaMoon : FaSun}/>\n                </Button>\n                <Flex marginLeft=\"30\">\n                    <Socials/>\n                </Flex>\n            </Flex>\n        </Flex>\n    );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/developer_avatar.2863fbde.jpg\";","import React, {useEffect, useState} from 'react';\nimport Typist from 'react-typist';\nimport {Grid, GridItem, Image, List, ListIcon, ListItem} from '@chakra-ui/react';\nimport {MdCheckCircle} from \"react-icons/all\";\n\nimport profilePic from '../../assets/developer_avatar.jpg';\n\nconst ProfileCard = () => {\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        setCount(1);\n    }, [count]);\n\n    return (\n        <Grid\n            templateColumns={{base: '1fr', md: '2fr 2fr', lg: '1fr 3fr'}}\n            mt={10}\n            p={4}\n            paddingBottom={10}\n            gridColumnGap={10}\n            textAlign={{base: 'center', md: 'inherit'}}>\n            <GridItem alignSelf=\"center\">\n                <Image src={profilePic} borderRadius=\"full\" alt=\"Sergei Viacheslaev\"/>\n            </GridItem>\n            <GridItem paddingTop=\"1px\" alignSelf=\"top\">\n                {count ? (<Typist cursor={{show: false, hideWhenDone: true}}\n                                  onTypingDone={() => setCount(0)}>\n            <span style={{fontSize: '24px', fontWeight: 'bold', color: '#1da1f2'}}>\n              Hello and welcome !\n              <br/>\n              I am {' '}\n                <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\n                Sergei Viacheslaev\n                </span>\n                <Typist.Backspace count={18} delay={2500}/>\n                   <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\n                   Java {''}\n                   </span>\n                   developer\n                <Typist.Backspace count={14} delay={2500}/>\n                  <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\n                    TypeScript {''}\n                  </span>\n                    developer\n                <Typist.Backspace count={20} delay={2500}/>\n                  <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\n                    Kotlin {''}\n                  </span>\n                    developer\n                 <Typist.Backspace count={16} delay={2500}/>\n                    interested in {''}\n                <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\n                    Backend {''}\n                  </span>\n                or {''}\n                <span style={{fontSize: '24px', fontWeight: 'bold', color: '#FF8C00'}}>\n                    Full-stack {''}\n                  </span>\n                    development\n                 <Typist.Backspace count={36} delay={900000000}/>\n            </span>\n                </Typist>) : ('')}\n                <br/>\n                <List spacing={3}>\n                    <ListItem>\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\n                        Oracle Certified Java 11 Professional\n                    </ListItem>\n                    <ListItem>\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\n                        Hands-on experience building enterprise Web applications\n                    </ListItem>\n                    <ListItem>\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\n                        IT background: information security, network engineer, system administration\n                    </ListItem>\n                    <ListItem>\n                        <ListIcon as={MdCheckCircle} color=\"green.500\"/>\n                        Creator of the free online course \"How to write Telegram-bots with Java + Spring\"\n                    </ListItem>\n                </List>\n                <br/>\n            </GridItem>\n        </Grid>\n    );\n};\n\nexport default ProfileCard;\n","export const frontendSkillsList = [\n    {\n        label: 'JavaScript',\n        src: 'https://img.icons8.com/color/64/000000/javascript.png',\n    },\n    {\n        label: 'React',\n        src: 'https://img.icons8.com/color/64/000000/react-native.png',\n    },\n    {\n        label: 'HTML',\n        src: 'https://seeklogo.com/images/H/html5-logo-EF92D240D7-seeklogo.com.png'\n    },\n\n]\n\nexport const backendSkillsList = [\n    {\n        label: 'Java',\n        src: 'https://img.icons8.com/color/64/000000/java.png',\n    },\n    {\n        label: 'Spring Boot,Cloud,Security,Data',\n        src: 'https://img.icons8.com/color/48/000000/spring-logo.png',\n    },\n    {\n        label: 'AWS',\n        src: 'https://img.icons8.com/color/64/000000/amazon-web-services.png',\n    },\n    {\n        label: 'TypeScript',\n        src: 'https://img.icons8.com/color/64/000000/typescript.png',\n    },\n    {\n        label: 'Kotlin',\n        src: 'https://img.icons8.com/color/64/000000/kotlin.png',\n    },\n\n]\n\nexport const devOpsSkillsList = [\n    {\n        label: 'Linux',\n        src: 'https://img.icons8.com/color/48/000000/linux--v1.png',\n    },\n    {\n        label: 'Jenkins',\n        src: 'https://img.icons8.com/color/48/000000/jenkins.png',\n    },\n    {\n        label: 'Docker',\n        src: 'https://img.icons8.com/color/48/000000/docker.png',\n    },\n    {\n        label: 'GitLab CI',\n        src: 'https://img.icons8.com/color/48/000000/gitlab.png',\n    },\n    {\n        label: 'Terraform',\n        src: 'https://img.icons8.com/color/64/000000/terraform.png',\n    },\n    {\n        label: 'Bitbucket',\n        src: 'https://img.icons8.com/color/48/000000/bitbucket.png',\n    },\n\n]\n","import React from 'react';\n\nconst IconCard = ({src}) => {\n    return (\n        <div>\n            <div\n                className=\"d-flex justify-content-center align-items-center m-2\"\n                style={{width: 48, height: 48}}>\n                <img src={src} alt=\"icon\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default IconCard;\n","import React from 'react';\nimport {Container, Tooltip} from 'react-bootstrap';\nimport {backendSkillsList, devOpsSkillsList, frontendSkillsList} from '../../utils/skillsImgUtils';\nimport {Flex, Heading} from \"@chakra-ui/layout\";\nimport IconCard from '../IconCard';\nimport {Grid} from \"@chakra-ui/react\";\n\n\nconst Skills = () => {\n    return (\n        <Container>\n            <Heading size=\"lg\" paddingLeft={5} pb={5}>Skills</Heading>\n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={5}>\n\n                <Flex maxW=\"240px\" paddingLeft={10}>\n                    <Flex>\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#007EFC'}}>\n                            BE:\n                            </span>\n                        {backendSkillsList.map(s => (\n                            <Tooltip title={s.label} id={s.label}>\n                                <IconCard key={s.label} src={s.src}/>\n                            </Tooltip>\n                        ))}\n                    </Flex>\n                </Flex>\n                <Flex maxW=\"240px\" paddingLeft={10} pb={10}>\n                    <Flex>\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#007EFC'}}>\n                            FE:\n                            </span>\n                        {frontendSkillsList.map(s => (\n                            <Tooltip title={s.label} id={s.label}>\n                                <IconCard key={s.label} src={s.src}/>\n                            </Tooltip>\n                        ))}\n                    </Flex>\n                </Flex>\n                <Flex maxW=\"240px\" paddingLeft={10} pb={5}>\n                    <Flex>\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#007EFC'}}>\n                            DevOps:\n                            </span>\n                        {devOpsSkillsList.map(s => (\n                            <Tooltip title={s.label} id={s.label}>\n                                <IconCard key={s.label} src={s.src}/>\n                            </Tooltip>\n                        ))}\n                    </Flex>\n                </Flex>\n            </Grid>\n        </Container>\n    )\n};\n\nexport default Skills;\n","export default __webpack_public_path__ + \"static/media/OCA.f52dc34e.png\";","export default __webpack_public_path__ + \"static/media/OCP.8d2131a2.png\";","export default __webpack_public_path__ + \"static/media/otus.cc6d0663.png\";","export default __webpack_public_path__ + \"static/media/linkedinLearning.8fa602e8.png\";","import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport {Box, Flex, Heading} from \"@chakra-ui/layout\";\nimport {Grid} from \"@chakra-ui/react\";\n\nimport ocaImg from '../../assets/certifications/OCA.png';\nimport ocpImg from '../../assets/certifications/OCP.png';\nimport otusImg from '../../assets/certifications/otus.png';\nimport linkedinLearningImg from '../../assets/certifications/linkedinLearning.png';\nimport {ExternalLink} from \"react-external-link\";\n\n\nconst Certifications = () => {\n    const certificationsList = [\n        {\n            label: 'OCP',\n            src: ocpImg,\n            link: 'https://www.credly.com/badges/9a8840e9-0470-41af-945a-192d0a8f20de',\n        },\n        {\n            label: 'OCA',\n            src: ocaImg,\n            link: 'https://www.credly.com/badges/e7c15dbb-8ec3-4f40-ac01-495a420c1d7a',\n        },\n        {\n            label: 'OTUS',\n            src: otusImg,\n            link: 'https://otus.ru/async/docs.certificate?uid=1670c803eece42a7ae4fcd2bff653fce&lang=ru-ru',\n        },\n        {\n            label: 'Kotlin',\n            src: linkedinLearningImg,\n            link: 'https://drive.google.com/file/d/1upHgdsWNnEfSYtyjozSJQ2dj95vIkTvY/view?usp=sharing',\n        },\n\n    ]\n\n    return (\n        <Container>\n            <Heading size=\"lg\" paddingLeft={5} pb={5}>Certifications</Heading>\n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={5}>\n                <Flex paddingLeft={5}>\n                    {certificationsList.map(s => (\n                        <ExternalLink href={s.link}>\n                            <Box boxSize=\"150\" p={1}>\n                                <img src={s.src} alt=\"Logo\"/>\n                            </Box>\n                        </ExternalLink>\n                    ))}\n                </Flex>\n            </Grid>\n        </Container>\n    )\n};\n\nexport default Certifications;\n","import React from 'react';\nimport {Box} from '@chakra-ui/layout';\n\nimport ProfileCard from '../../components/profile-card/profile-card.component';\nimport Skills from '../../components/skills/skills.component';\nimport Certifications from \"../../components/certifications/certifications.component\";\n\nconst HomePage = () => {\n    return (\n        <Box>\n            <ProfileCard/>\n            <Skills/>\n            <Certifications/>\n        </Box>\n    );\n};\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/telegramBotGithubPic.f5ed15d0.jpg\";","export default __webpack_public_path__ + \"static/media/telegramBotPreviewPic.8908adb8.jpg\";","export default __webpack_public_path__ + \"static/media/filesAnalyzerPreviewPic.ff8d1080.jpg\";","export default __webpack_public_path__ + \"static/media/filesAnalyzerGithubPic.faff9c8a.jpg\";","export default __webpack_public_path__ + \"static/media/status-monitorGithubPic.9afe2911.jpg\";","export default __webpack_public_path__ + \"static/media/status-monitorPreviewPic.c3a8d57f.jpg\";","import React from 'react';\nimport {Image, SimpleGrid, Stack, Text} from \"@chakra-ui/react\";\nimport {Heading} from \"@chakra-ui/layout\";\nimport {ExternalLink} from 'react-external-link';\n\nimport telegramBotGithubPic from \"../../assets/projects-images/telegram-bot/telegramBotGithubPic.jpg\"\nimport telegramBotPreviewPic from \"../../assets/projects-images/telegram-bot/telegramBotPreviewPic.jpg\"\nimport filesAnalyzerPreviewPic from \"../../assets/projects-images/files-analyzer/filesAnalyzerPreviewPic.jpg\"\nimport filesAnalyzerGithubPic from \"../../assets/projects-images/files-analyzer/filesAnalyzerGithubPic.jpg\"\nimport statusMonitorGithubPic from \"../../assets/projects-images/status-monitor/status-monitorGithubPic.jpg\"\nimport statusMonitorPreviewPic from \"../../assets/projects-images/status-monitor/status-monitorPreviewPic.jpg\"\n\nconst ProjectsPage = () => {\n    const projectsList = [\n        {\n            title: \"Services status Monitor\",\n            previewImg: statusMonitorPreviewPic,\n            githubIcon: statusMonitorGithubPic,\n            description: \"Monitors and shows statuses of the services\",\n            env: \"Kotlin, SpringBoot, Spring Security, Spring Data, WebSockets, JS, Jquery, MongoDB, Swagger, JUnit, Mockito, Gradle\",\n            link: \"https://github.com/SergioViacheslaev/services-status-monitor\"\n        },\n        {\n            title: \"RZD Tickets Telegram-bot\",\n            previewImg: telegramBotPreviewPic,\n            githubIcon: telegramBotGithubPic,\n            description: \"Finds train tickets and notifies if price changes.\",\n            env: \"Java 12, Spring Boot, Spring Data, Mongo Cloud, RZD API, lombok, Gradle\",\n            link: \"https://github.com/SergioViacheslaev/RZDTicketsMonitoring-TelegramBot\"\n        },\n        {\n            title: \"Files Analyzer\",\n            previewImg: filesAnalyzerPreviewPic,\n            githubIcon: filesAnalyzerGithubPic,\n            description: \"This application can find and read files with plain text inside (txt, log). Supports reading large files (more than 1 GB) and search by different criterias.\",\n            env: \"Java 12, OpenJFX, RichTextFx, lombok, Maven\",\n            link: \"https://github.com/SergioViacheslaev/JavaFX-FilesAnalyzer\"\n        },\n\n    ]\n\n\n    return (\n        <SimpleGrid columns={[1, null, 2, 3]} spacing={[4, null, 6]} py=\"4\">\n            {\n                projectsList.map(project => (\n                    <Stack key={project.title} spacing={2} _hover={{shadow: 'md'}} p={2}>\n                        {/*todo: Подоборать шрифт цвет заголовка проекта*/}\n                        <Heading isTruncated>\n                            <span style={{fontSize: '22px', color: '#1da1f2'}}>\n                            {project.title}\n                            </span>\n                        </Heading>\n                        <Text>\n                            {project.description}\n                        </Text>\n                        <Image src={project.previewImg}/>\n                        <Text py={0}>\n                            <span style={{fontSize: '18px', fontWeight: 'bold', color: '#1da1f2'}}>\n                            Env: {''}\n                            </span>\n                            <Text as=\"abbr\">\n                                {project.env}\n                            </Text>\n                        </Text>\n\n                        <ExternalLink href={project.link}>\n                            <Image src={project.githubIcon}/>\n                        </ExternalLink>\n                    </Stack>\n                ))\n            }\n        </SimpleGrid>\n    );\n};\n\nexport default ProjectsPage;\n","import React from 'react';\nimport {Text} from \"@chakra-ui/react\";\n\nconst UnderConstructionPage = () => {\n    return (\n        <Text fontSize='32px' color='tomato'>\n            CV is under construction...\n        </Text>\n    );\n\n};\n\nexport default UnderConstructionPage;\n","import React from 'react';\nimport {Container} from '@chakra-ui/react';\nimport {Route, Switch} from 'react-router';\n\nimport './App.css';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ProjectsPage from './pages/projects/projects.component';\nimport UnderConstructionPage from \"./pages/underconstruction/underconstruction.component\";\n\nfunction App() {\n  return (\n    <Container maxW=\"container.xl\" pt={4}>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/projects\" component={ProjectsPage} />\n        <Route path=\"/underconstruction\" component={UnderConstructionPage} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react';\n\n// Add color mode config\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\n// Extend the theme\nconst theme = extendTheme({ config });\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme';\n\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}